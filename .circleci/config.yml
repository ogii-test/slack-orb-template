version: '2.1'
 
orbs:
  slack: circleci/slack@4.2.1
  
parameters:
  authorName:
    description: 'The author of the PR'
    type: string
    default: 'Pocket Prep'
  authorUserName:
    description: 'The Github username of PR author'
    type: string
    default: 'pocket-prep'
  targetBranch:
    description: 'The branch we are merging INTO'
    type: string
    default: ''
  
slack: &template 
  template: |
   echo "{
      "attachments": [{
        "color": "#5CBB8B",
        "pretext": "Build #$CIRCLE_BUILD_NUM of *$CIRCLE_PROJECT_REPONAME* project has passed",
        "title": "$CIRCLE_STAGE Results",
        "title_link": "$CIRCLE_BUILD_URL",
        "footer": "<< pipeline.parameters.authorName >> | $CIRCLE_BRANCH | ${CIRCLE_SHA1:1:6}",
        "footer_icon": "https://github.com/<< pipeline.parameters.authorUserName >>.png?size=32"
      }]
    }"
 
jobs:
  job1:
    docker:
      - image: 'cimg/base:2020.01'  
    steps:
      - checkout
      - run:
          command: |
            echo 'export MY_ORB_TEMPLATE_PASS=$(jq .pass ./slack_template/templates.json)' >> $BASH_ENV
            echo "$MY_ORB_TEMPLATE_PASS"
      - run:
          command: |
            echo 'export MY_ORB_TEMPLATE_FAIL=$(jq .fail ./slack_template/templates.json)' >> $BASH_ENV
            echo "$MY_ORB_TEMPLATE_FAIL"
      - run:
         command: |
          artifacts=$(curl -X GET https://circleci.com/api/v1.1/project/bitbucket/ispottv/qaautomationframework/1199/artifacts -H "circle-token: $CIRCLECI_TOKEN" | jq '.[0].url' )
          echo "$artifacts"
      - slack/notify:
          channel: slacktest
          event: pass
          template: MY_ORB_TEMPLATE_PASS
         # <<: *template
      - slack/notify:
          channel: slacktest
          event: fail
          template: MY_ORB_TEMPLATE_FAIL
          #<<: *template
      - run:
          command: *template
          
workflows:
  send-notification:
    jobs:
      - job1:
          context: slack-secrets
